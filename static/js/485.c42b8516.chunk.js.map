{"version":3,"file":"static/js/485.c42b8516.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styles.jsx","components/MovieDetails/MovieDetails.jsx","hooks/useFetchById.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonBack = styled.button`\n  background-color: rgb(247, 76, 8);\n  border-style: none;\n  border-radius: 5px;\n  height: 25px;\n  width: 70px;\n  margin-right: 30px;\n  :hover,\n  :focus {\n    background-color: #fccab8;\n    cursor: pointer;\n  }\n`;\n\nexport const SectionDetails = styled.div`\nwidth: 1000px;\n  display: flex;\n  margin: 30px auto 0 auto;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n`;\n\nexport const MovieCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: left;\n  margin-left: 30px;\n  width: 400px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  grid-gap: 5px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-top: 0;\n`;\n\nexport const Link = styled(NavLink)`\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n  :hover,\n  :focus {\n    color: rgb(247, 76, 8);\n  }\n  &.active {\n    background-color: rgb(247, 76, 8);\n    color: black;\n    padding: 2px 7px;\n    border-radius: 5px\n  }\n`;","import { useFetchById } from 'hooks/useFetchById';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\nimport {\n  ButtonBack,\n  SectionDetails,\n  MovieCard,\n  MovieCardInfo,\n  GenresList,\n  MovieTitle,\n  Link,\n} from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const details = useFetchById(fetchMovieDetails);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const URLimg = 'https://image.tmdb.org/t/p/w500';\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <SectionDetails>\n        <ButtonBack\n          type=\"button\"\n          onClick={() => {\n            navigate(backLink);\n          }}\n        >\n          Go back\n        </ButtonBack>\n        {details && (\n          <MovieCard>\n            <img\n              src={URLimg + details.poster_path}\n              alt={details.title}\n              width=\"350px\"\n            />\n            <MovieCardInfo>\n              <div>\n                <MovieTitle>\n                  {details.title} ({details.release_date.slice(0, 4)})\n                </MovieTitle>\n                <p>\n                  Vote/Votes: {details.vote_average.toFixed(1)}/\n                  {details.vote_count}\n                </p>\n                <p>Popularity: {details.popularity.toFixed(1)}</p>\n                <h3>Overview</h3>\n                <p>{details.overview}</p>\n                <h3>Genres</h3>\n                <GenresList>\n                  {details.genres.map(({ name }) => (\n                    <li key={name}>{name}</li>\n                  ))}\n                </GenresList>\n              </div>\n              <div>\n                <Link to=\"cast\" state={{ from: backLink }}>\n                  Cast\n                </Link>\n                <Link to=\"reviews\" state={{ from: backLink }}>\n                  Reviews\n                </Link>\n              </div>\n            </MovieCardInfo>\n          </MovieCard>\n        )}\n      </SectionDetails>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchById = (func) => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    func(id).then(setMovie);\n  }, [func, id]);\n\n  return movie;\n};","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = 'c2a6de5ac63866aa6b280a23fe379634';\nconst params = {\n  api_key: API_KEY,\n  page: 1,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const responce = await axios('/trending/movie/day', { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const responce = await axios(`/search/movie?query=${name}`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}`, { params });\n    return responce.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/credits`, { params });\n    return responce.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/reviews`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["ButtonBack","styled","SectionDetails","MovieCard","MovieCardInfo","GenresList","MovieTitle","Link","NavLink","details","useFetchById","fetchMovieDetails","navigate","useNavigate","backLink","useLocation","state","from","type","onClick","src","poster_path","alt","title","width","release_date","slice","vote_average","toFixed","vote_count","popularity","overview","genres","map","name","to","func","useState","movie","setMovie","id","useParams","useEffect","then","axios","params","api_key","page","fetchTrendingMovies","responce","data","results","console","log","message","searchMovies","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}