{"version":3,"file":"static/js/241.8ca96c0b.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.styles.jsx","components/TrendingList/TrendingList.jsx","pages/Movies/Movies.styles.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 16px;\n  display: grid;\n  grid-gap: 15px;\n  grid-template-columns: repeat(5, 1fr);\n`;\n\nexport const MoviesItem = styled.li`\n  width: 200px;\n  transition: 1s;\n  display: flex;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MoviesLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  ${MoviesItem}:hover & {\n    color: rgb(247, 76, 8);\n  }\n  &.active {\n    color: rgb(247, 76, 8);\n  }\n`;\n\nexport const MoviesWrapper = styled.div`\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n`;\n\nexport const TitleMovies = styled.h3`\n  flex-grow: 1;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  background-color: inherit;\n`;\n\nexport const Loading = styled.div`\n  font-style: italic;\n  margin-top: 10px;\n`","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MoviesList,\n  MoviesItem,\n  MoviesLink,\n  MoviesWrapper,\n  Img,\n  TitleMovies,\n} from './TrendingList.styles';\n\nexport const TrendingList = ({ gallery, pathLocation }) => {\n  const URLimg = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n\n  return (\n    <>\n      <MoviesWrapper>\n        <MoviesList>\n          {gallery && (\n            gallery.map(({ id, title, release_date, poster_path }) => {\n              return (\n                <MoviesItem key={id}>\n                  <MoviesLink\n                    to={pathLocation + id.toString()}\n                    state={{ from: location }}\n                  >\n                    <Img src={URLimg + poster_path} alt={title} />\n                    <TitleMovies>\n                      {title} ({release_date.slice(0, 4)})\n                    </TitleMovies>\n                    \n                  </MoviesLink>\n                </MoviesItem>\n              );\n            })\n          )}\n        </MoviesList>\n      </MoviesWrapper>\n    </>\n  );\n};\n\nTrendingList.propTypes = {\n  gallery: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  pathLocation: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  margin-right: 10px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ButtonSearch = styled.button`\n  background-color: rgb(247, 76, 8);\n  border-style: none;\n  border-radius: 5px;\n  height: 30px;\n  width: 100px;\n  :hover,\n  :focus {\n    background-color: #fccab8;\n    cursor: pointer;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { searchMovies } from '../../service/api';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { Input, Form, ButtonSearch } from './Movies.styles';\n\nconst Movies = () => {\n  const [gallery, setGallery] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name');\n  const pathLocation = '';\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchName = e.target.elements.name.value;\n    setSearchParams({ name: searchName });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    if (query.trim() === '') {\n      alert('Please enter the name for search!');\n      return;\n    }\n    searchMovies(query).then(setGallery);\n  }, [query]);\n\n  return (\n    <div>\n      <Form onSubmit={onFormSubmit}>\n        <Input name=\"name\" type=\"text\" />\n        <ButtonSearch>Search</ButtonSearch>\n      </Form>\n      {gallery || gallery.length !== 0 ? (\n        <TrendingList gallery={gallery} pathLocation={pathLocation} />\n      ) : (\n        <div>Not found</div>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = 'c2a6de5ac63866aa6b280a23fe379634';\nconst params = {\n  api_key: API_KEY,\n  page: 1,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const responce = await axios('/trending/movie/day', { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const responce = await axios(`/search/movie?query=${name}`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}`, { params });\n    return responce.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/credits`, { params });\n    return responce.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/reviews`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["MoviesList","styled","MoviesItem","MoviesLink","NavLink","MoviesWrapper","Img","TitleMovies","TrendingList","gallery","pathLocation","location","useLocation","map","id","title","release_date","poster_path","to","toString","state","from","src","alt","slice","Input","Form","ButtonSearch","useState","setGallery","useSearchParams","searchParams","setSearchParams","query","get","useEffect","trim","searchMovies","then","alert","onSubmit","e","preventDefault","searchName","target","elements","name","value","type","length","axios","params","api_key","page","fetchTrendingMovies","responce","data","results","console","log","message","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}